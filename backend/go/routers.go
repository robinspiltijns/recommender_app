/*
 * Podcast Recommender app
 *
 * This is the API for the podcast recommender app. The API used to get all data is Listen Notes (https://www.listennotes.com/api/)
 *
 * API version: 1.0.0
 * Contact: joren.sjongers@icloud.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"//",
		Index,
	},

	Route{
		"GetBestOfGenre",
		strings.ToUpper("Get"),
		"/best-of-genre",
		GetBestOfGenre,
	},

	Route{
		"GetEpisode",
		strings.ToUpper("Get"),
		"/episode",
		GetEpisode,
	},

	Route{
		"GetEpisodeRecommendationsBasedOnEpisode",
		strings.ToUpper("Get"),
		"/get-recommendations-based-on/episode",
		GetEpisodeRecommendationsBasedOnEpisode,
	},

	Route{
		"GetGenres",
		strings.ToUpper("Get"),
		"/genres",
		GetGenres,
	},

	Route{
		"GetPodcast",
		strings.ToUpper("Get"),
		"/podcast",
		GetPodcast,
	},

	Route{
		"GetPodcastRecommendationsBasedOnPodcast",
		strings.ToUpper("Get"),
		"/get-recommendations-based-on/podcast",
		GetPodcastRecommendationsBasedOnPodcast,
	},

	Route{
		"GetSearchResults",
		strings.ToUpper("Get"),
		"/search",
		GetSearchResults,
	},

	Route{
		"GetTheBestPodcasts",
		strings.ToUpper("Get"),
		"/get-best-podcasts",
		GetTheBestPodcasts,
	},

	Route{
		"GetTimingResults",
		strings.ToUpper("Get"),
		"/timing-results",
		GetTimingResults,
	},

	Route{
		"GetTopLevelGenres",
		strings.ToUpper("Get"),
		"/top-level-genres",
		GetTopLevelGenres,
	},

	Route{
		"GetUniqueId",
		strings.ToUpper("Get"),
		"/get-unique-id",
		GetUniqueId,
	},

	Route{
		"StartTimePost",
		strings.ToUpper("Post"),
		"/start-time",
		StartTimePost,
	},

	Route{
		"StopTimePost",
		strings.ToUpper("Post"),
		"/stop-time",
		StopTimePost,
	},

	Route{
		"Test",
		strings.ToUpper("Get"),
		"/test",
		Test,
	},
}
