/*
 * Podcast Recommender app
 *
 * This is the API for the podcast recommender app. The API used to get all data is Listen Notes (https://www.listennotes.com/api/)
 *
 * API version: 1.0.0
 * Contact: joren.sjongers@icloud.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type Show struct {
	// Podcast id.
	Id string `json:"id,omitempty"`
	// RSS url of this podcast. This field is available only in the PRO plan.
	Rss string `json:"rss,omitempty"`
	// The type of this podcast - episodic or serial.
	Type_ string `json:"type,omitempty"`
	// The email of this podcast's producer. This field is available only in the PRO plan.
	Email string `json:"email,omitempty"`

	Extra *ShowExtra `json:"extra,omitempty"`
	// Image url for this podcast's artwork. If you are using PRO plan, then it's a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**, low resolution image (300x300). 
	Image string `json:"image,omitempty"`
	// Podcast name.
	Title string `json:"title,omitempty"`
	// The country where this podcast is produced.
	Country string `json:"country,omitempty"`
	// Website url of this podcast.
	Website string `json:"website,omitempty"`

	Episodes []ShowEpisodes `json:"episodes,omitempty"`
	// The language of this podcast. You can get all supported languages from `GET /languages`.
	Language string `json:"language,omitempty"`

	GenreIds []int32 `json:"genre_ids,omitempty"`
	// iTunes id for this podcast.
	ItunesId int32 `json:"itunes_id,omitempty"`
	// Podcast publisher name.
	Publisher string `json:"publisher,omitempty"`
	// Thumbnail image url for this podcast's artwork (300x300).
	Thumbnail string `json:"thumbnail,omitempty"`
	// Whether this podcast is claimed by its producer on [ListenNotes.com](https://www.ListenNotes.com).
	IsClaimed bool `json:"is_claimed,omitempty"`
	// Html of this episode's full description
	Description string `json:"description,omitempty"`

	LookingFor *ShowLookingFor `json:"looking_for,omitempty"`
	// The estimated popularity score of a podcast compared to all other rss-based public podcasts in the world on a scale from 0 to 100. If the score is not available, it'll be null. Learn more at listennotes.com/listen-score 
	ListenScore int32 `json:"listen_score,omitempty"`
	// Total number of episodes in this podcast.
	TotalEpisodes int32 `json:"total_episodes,omitempty"`
	// The url of this podcast on [ListenNotes.com](https://www.ListenNotes.com).
	ListennotesUrl string `json:"listennotes_url,omitempty"`
	// Whether this podcast contains explicit language.
	ExplicitContent bool `json:"explicit_content,omitempty"`
	// The published date of the latest episode of this podcast. In milliseconds
	LatestPubDateMs int32 `json:"latest_pub_date_ms,omitempty"`
	// The published date of the oldest episode of this podcast. In milliseconds
	EarliestPubDateMs int32 `json:"earliest_pub_date_ms,omitempty"`
	// Passed to the **next_episode_pub_date** parameter of `GET /podcasts/{id}` to paginate through episodes of that podcast.
	NextEpisodePubDate int32 `json:"next_episode_pub_date,omitempty"`
	// The estimated popularity ranking of a podcast compared to all other rss-based public podcasts in the world. For example, if the value is 0.5%, then this podcast is one of the top 0.5% most popular shows out of all podcasts globally, ranked by Listen Score. If the ranking is not available, it'll be null. Learn more at listennotes.com/listen-score 
	ListenScoreGlobalRank string `json:"listen_score_global_rank,omitempty"`
}
